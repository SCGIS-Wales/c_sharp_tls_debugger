name: Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release

    - name: Publish
      run: dotnet publish -c Release -o ./publish

    - name: List published files
      run: ls -R ./publish

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: MTLSExample
        path: ./publish

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: MTLSExample
        path: ./publish

    - name: List downloaded files
      run: ls -R ./publish

    - name: Get Previous Release
      id: get_previous_release
      uses: stefanzweifel/git-auto-commit-action@v4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        commit_message: "Update version"
        file_pattern: "version.txt"

    - name: Increment Version
      id: increment_version
      uses: einaregilsson/incremental-release@v2
      with:
        major-pattern: '^BREAKING'
        minor-pattern: '^feat'
        default: 'patch'
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.increment_version.outputs.tag }}
        release_name: Release ${{ steps.increment_version.outputs.tag }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./publish/MTLSExample.exe # Adjust the asset path based on the actual file name
        asset_name: MTLSExample.exe # Adjust the asset name based on the actual file name
        asset_content_type: application/octet-stream
